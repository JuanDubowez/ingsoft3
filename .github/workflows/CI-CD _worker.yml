name: CI-CD_worker

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ tpIntegrador ]
    paths:
      - 'tpIntegrador/example-voting-app-master/worker/**'
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # job to build the microservice
  build-microservices:
    name: Build worker app
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install Java JDK with maven
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
          cache: maven
      # Install java app dependences
      - name: Install java app dependences
        run: |
          cd tpIntegrador/example-voting-app-master/worker/
          mvn -B dependency:resolve 
      # Compile Worker application
      - name: Build with Maven
        run: |
          cd tpIntegrador/example-voting-app-master/worker/
          mvn -B package --file pom.xml
      - name: Test
        run: mvn --batch-mode -Dmaven.test.failure.ignore=true test

      - name: Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

  # job to build and publish docker image
  build-and-push-docker-image:
    name: Build Docker image and push to repositories
    # run only when code is compiling 
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # setup Docker build action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build worker image and push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: ./tpIntegrador/example-voting-app-master/worker/
          # Note: tags has to be all lower-case
          tags: juandubowez/worker:latest 
          # build on feature branches, push only on master branch
          push: ${{ github.ref == 'refs/heads/tpIntegrador' }}

  # job to deploy service to Railway
  deploy:
    name: Deploy service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Use Node 16
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Install packages
        run: yarn install --frozen-lockfile

      - name: Install Railway
        run: npm i -g @railway/cli

      - name: Deploy worker app
        working-directory: ./tpIntegrador/example-voting-app-master/worker/
        run: railway up -s worker
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
